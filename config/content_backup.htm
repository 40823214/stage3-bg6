<h1>About</h1>
<p><span>小組個人成員倉儲/</span>小組個人成員網頁</p>
<p><a href="https://github.com/40823211/cd2021">40823211</a><a href="https://40823211.github.io/cd2021/content/index.html">/40823211</a> 陳昱愷</p>
<p><a href="https://github.com/40823214/cd2021">40823214</a>/<a href="https://40823214.github.io/cd2021/content/index.html">40823214</a> <span>林厚宇</span></p>
<p><a href="https://github.com/40823216/cd2021">40823216</a><a href="https://40823216.github.io/cd2021/content/index.html">/40823216</a> <span>陳弘勛</span></p>
<p><a href="https://github.com/40823218/cd2021">40823218</a><a href="https://40823218.github.io/cd2021/content/index.html">/40823218</a> <span>陳致文</span></p>
<p><a href="https://github.com/40823225/cd2021">40823225</a><a href="https://40823225.github.io/cd2021/content/index.html">/40823225</a> <span>徐誠隆</span></p>
<p><a href="https://github.com/40823238/cd2021">40823238</a><a href="https://40823238.github.io/cd2021/content/index.html">/40823238</a> <span>吳容輝</span></p>
<p><a href="https://github.com/40823247/cd2021">40823247</a><a href="https://40823247.github.io/cd2021/content/index.html">/40823247</a> <span>許力右</span></p>
<p><a href="https://github.com/40823248/cd2021">40823248</a><a href="https://40823248.github.io/cd2021/content/index.html">/40823248</a> <span>劉彥廷</span></p>
<p><span>test</span></p>
<h1>機械手臂</h1>
<p>原本我們的主題，是在我們原本在stage2-bg6所做的腳踏車衝擊測試機跟機械手臂在做選擇，但考慮到<span>腳踏車衝擊測試機的零件數過多及他所會遇到的力學相關的問題，所以我們最後討論出來的結果是，將主題訂為機械手臂。</span></p>
<h2>繪圖成果</h2>
<p><span><img alt="" height="708" src="/images/機械手臂成品.jpg" width="890"/></span></p>
<h1>程式模擬</h1>
<h2>W10</h2>
<p><span>上網找的資料顯示coppeliasim上有一個編輯程式的選項</span></p>
<p><span>參考資料:<a href="https://zhuanlan.zhihu.com/p/105960079">https://zhuanlan.zhihu.com/p/105960079</a></span></p>
<p>4/27(二)因為繪圖部分還沒畫好，今天暫時用coppeliasim裡的機械手臂模型來模擬。</p>
<p>設定的主體上連結每個零件，各零件之間有可以旋轉的軸，以及連結的命令區塊</p>
<p>下圖為參考的機械手臂:</p>
<p><img alt="" height="336" src="/images/coppeliaSim_7DT9riixBZ.png" width="500"/></p>
<p><span>這是機械手臂的零件圖:</span></p>
<p><span><img alt="" height="500" src="/images/coppeliaSim_SfnwNoWqxG.png" width="322"/></span></p>
<h2>W11</h2>
<p><span>根據上網找的資料，發現COPPELIASIM的程式編譯語言為LUA，但仍可透過改變設定，來使用其他語言編譯。</span></p>
<p><span><img alt="" height="305" src="/images/chrome_ksKg2rL82f.png" width="500"/></span></p>
<p><span>以下為參考資料:</span></p>
<p><a href="https://blog.csdn.net/qq_29696095/article/details/104406971">https://blog.csdn.net/qq_29696095/article/details/104406971</a><br/><a href="https://blog.csdn.net/qq_29696095/article/details/104474081">https://blog.csdn.net/qq_29696095/article/details/104474081</a><br/><a href="https://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm">https://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm</a></p>
<p><a href="http://mde.tw/cd2021/downloads/V-REP%20Lecture.pdf">http://mde.tw/cd2021/downloads/V-REP%20Lecture.pdf</a><br/><a href="http://hades.mech.northwestern.edu/index.php/CoppeliaSim_Introduction">http://hades.mech.northwestern.edu/index.php/CoppeliaSim_Introduction</a><br/><a href="https://www.coppeliarobotics.com/helpFiles/index.html">https://www.coppeliarobotics.com/helpFiles/index.html</a><br/><a href="http://mde.tw/cd2021/content/V-rep.html">http://mde.tw/cd2021/content/V-rep.html</a></p>
<h1>CoppliaSim模擬圖檔</h1>
<h2>架設場景</h2>
<h3>0510對軸進行旋轉控制</h3>
<p>使用coppeliaSim 先叫出一個簡單的軸</p>
<p>來進行模擬控制</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/9m9_lNlXvfA" width="560"></iframe></p>
<p></p>
<h3>0513對方快進行XYZ軸控制</h3>
<p></p>
<p>建立方塊並且對其進行XYZ軸控制</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/d_3A25jRKEs" width="560"></iframe></p>
<h3>0513物件螺旋運動</h3>
<p>使用<span>線程腳本使方塊進行螺旋運動</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/4_rgcQVmUs0" width="560"></iframe></span></p>
<p>code</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_threadmain()
    jointx=sim.getObjectHandle('01')
    jointy=sim.getObjectHandle('02')
    jointz=sim.getObjectHandle('03')
    high=0
    
    for cycle=0,36000,1 do
        sim.setJointTargetPosition(jointx,0.3*(math.sin(cycle*math.pi/180)))
        sim.wait(0.01)
        sim.setJointTargetPosition(jointy,0.3*(math.cos(cycle*math.pi/180)))
        sim.wait(0.01)
        high=high+0.001
        sim.setJointTargetPosition(jointz,high)
        sim.wait(0.01)
        
    end
end</pre>
<h3>0510架設機械手臂場景</h3>
<p>將所有物件控制後直接進行模擬，檢測是否有異樣</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rUZ-taH8l-4" width="560"></iframe></p>
<h3>0510場景微調</h3>
<p>嘗試使用程式控制</p>
<p>但是還是會亂跑</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/wfNZQoLKPFc" width="560"></iframe></p>
<p></p>
<p></p>
<h3>0510場景路徑控制</h3>
<p>勉強可以控制路徑了(預先設定</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/TPKAXlE8dSc" width="560"></iframe></p>
<h3>0510場景路徑控制</h3>
<p>可以透過程式來進行路徑的預先規劃</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ClpcrK5-4IQ" width="560"></iframe></p>
<p></p>
<h2>尋找控制代碼</h2>
<p>coppeliasim中</p>
<p>simGetSimulatorMessage()為讀取鍵盤狀態的指令</p>
<p>但是我們不知道指令是甚麼，所以寫了一段程式來檢測看每一個按鍵的指令是什麼</p>
<p>所以寫了這一支程式來檢測每一個按鈕的值</p>
<p>在coppeliaSim中叫出一個物件，然後對那個物件編寫程式如下</p>
<p>開始模擬後按下鍵盤鍵即可在下方視窗顯示對應的按鍵</p>
<p><img alt="" height="449" src="/images/findcode.jpg" width="800"/></p>
<p></p>
<h2>控制解說</h2>
<p>方向鍵上,下，控制大臂的上下移動</p>
<p>方向鍵左,右，控制底座的旋轉</p>
<p>小鍵盤2,8 控制小臂上下移動</p>
<p>小鍵盤4,6 控制小臂的旋轉</p>
<p>小鍵盤1,3 控制手腕的轉動</p>
<p>小鍵盤0 控制小臂是否與大臂連動</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8Od8iPu0vRI" width="560"></iframe></p>
<p></p>
<h2>0513 Lua 新增夾爪控制</h2>
<p></p>
<p>新增一夾爪與兩個攝影機</p>
<p>夾爪可以夾取物品，攝影機可以方便對正要夾取的物品</p>
<p>圖檔:</p>
<p><a href="/downloads/機械手臂/Camera contral.ttt">Camera contral.ttt</a></p>
<p>參考影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/E8EAB7ePr_Y" width="560"></iframe></p>
<p></p>
<h2>0511 Programming in C++</h2>
<p>圖檔:</p>
<p><a href="/downloads/機械手臂/programmingl in C++ Unclear.ttt">programmingl in C++ Unclear.ttt</a></p>
<p>簡介:</p>
<p>目前還尚未寫出(5/11)，在編譯上還有問題，問題跟"remoteAPI in C++"中的問題一樣</p>
<p>並且尚未確定是否能直些在CoppliaSim中運行C++程式</p>
<p><img alt="" height="891" src="/images/C_1.jpg" width="800"/></p>
<p><img alt="" height="636" src="/images/C_2.jpg" width="800"/></p>
<p></p>
<h2>CoppeliaSim 教學</h2>
<h3>內鍵CODE 指令</h3>
<p>部分LUA指令講解</p>
<p>1.sim.getObjectHandle</p>
<p>使用範例如下</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">XXX=sim.getObjectHandle('joint')</pre>
<p>講解 XXX為一個自行定義的名詞，此指令為定義XXX為一個連接軸，而('joint')為該軸在場景裡面的名稱</p>
<p>2.sim.setJointTargetPosition</p>
<p><span>使用範例如下</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sim.setJointTargetPosition(XXX,90)</pre>
<p>講解 XXX移動至90這個位置，或旋轉至90rad，XXX請參見第一個指令講解,角度預設為RAD</p>
<p>若要需求為旋轉至90deg，指令參考如下</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sim.setJointTargetPosition(XXX,90*math.pi/180)</pre>
<p>3.sim.getSimulatorMessage</p>
<p>使用範例如下</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">message,auxiliaryData=sim.getSimulatorMessage()
while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==2009) then
               指定要做的事情
            end
         end
message,auxiliaryData=sim.getSimulatorMessage()
end
</pre>
<p></p>
<p>講解</p>
<p>第一行</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">message,auxiliaryData=sim.getSimulatorMessage()</pre>
<p>message代表跟鍵盤對接的狀態</p>
<p>auxiliaryData代表讀取到鍵盤的值</p>
<p>第二行的開始</p>
<p>當(while)"message的值不等於-1時</p>
<p>若(if)<span>auxiliaryData讀取到的值為2009</span></p>
<p><span>進行要做的事情，可以是上面第二項"sim.setJointTargetPosition"或其他指令</span></p>
<p><span>4.simwat</span></p>
<p><span>使用範例</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sim.wait(0.01)</pre>
<p>只能在線程控制中使用(Threaded chil script)</p>
<p>為暫停指令，括弧內單位為秒</p><h3>機械手臂設定範例</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/s8eRsonlKHo" width="560"></iframe></p><h2>舊資料</h2>
<h3>0511 Programming in Lua on multiple program</h3>
<p>圖檔下載</p>
<p><a href="/downloads/機械手臂/programming in Lua in multiple program.ttt">programming in Lua in multiple program.ttt</a></p>
<p>簡介:</p>
<p>最基本的控制</p>
<p>在單一軸上對單一軸做程式控制</p>
<p>優點: 程式簡單，變數少</p>
<p>缺顛: 要修改程式不易，有幾個程式就需要修改幾次</p>
<p><img alt="" height="427" src="/images/pro1.jpg" width="800"/></p>
<p><img alt="" height="495" src="/images/pro2.jpg" width="800"/></p>
<p><img alt="" height="828" src="/images/pro3.jpg" width="800"/></p>
<p><img alt="" height="587" src="/images/pro4.jpg" width="800"/></p>
<p><img alt="" height="543" src="/images/pro5.jpg" width="800"/></p>
<h3>0511 Programming in Lua in One program</h3>
<p>圖檔</p>
<p><a href="/downloads/機械手臂/programming in Lua in One program.ttt">programming in Lua in One program.ttt</a></p>
<p>簡介</p>
<p>使用單一程式進行控制</p>
<p>優點: 程式只有一個，所以可以在編寫上比較輕鬆</p>
<p>缺點: 程式較長，尋找特定函式較不易，變數較多程式控制還多，命名上須留意</p>
<p><img alt="" height="1091" src="/images/proall_1.jpg" width="800"/></p>
<p><img alt="" height="423" src="/images/proall_2.jpg" width="800"/></p>
<p></p>
<h1>remoteAPI</h1>
<h2>remoteAPI in C++</h2>
<h3>0511</h3>
<p>嘗試以C++最為remoteAPI控制的語言</p>
<p>進行修改後還是出現問題</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">simxGetObjectHandle(clientID, "joint1", &amp;joint01, simx_opmode_oneshot_wait);</pre>
<p>上程式片段中</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">simx_opmode_oneshot_wait</pre>
<p>此定義一直出現error，內容如下</p>
<p>error: 'simx_opmode_oneshot_wait' was not declared in this scope</p>
<p>中譯: <span>simx_opmode_oneshot_wait 定義不明</span></p>
<p><span>但是在尋找網路上的範例，寫法也都是如我程式中一樣，目前還在尋找解決方法</span></p>
<p><span></span></p>
<p><span>附上程式</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;Windows.h&gt;
#include &lt;iostream&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;math.h&gt;


extern "C" {
    #include "remoteAPI/extApi.h"
}



using namespace std;

int main(){
    int clientID = 0;
    simxFinish(-1);
    clientID = simxStart((simxChar*)"127.0.0.1", 19997, true, true, 5000, 5);
    Sleep(1);
    if (clientID != -1)
    {
        int joint01;
        int joint02;
        int joint03;
        int joint04;
        int joint05;
        simxGetObjectHandle(clientID, "joint1", &amp;joint01, simx_opmode_oneshot_wait);//setting
        simxGetObjectHandle(clientID, "joint2", &amp;joint02, simx_opmode_oneshot_wait);
        simxGetObjectHandle(clientID, "joint3", &amp;joint03, simx_opmode_oneshot_wait);
        simxGetObjectHandle(clientID, "joint4", &amp;joint04, simx_opmode_oneshot_wait);
        simxGetObjectHandle(clientID, "joint5", &amp;joint05, simx_opmode_oneshot_wait);


        float degset01=-11.9;
        float degset02=34.69;
        float degset03=-20.2;
        float degset04=-11.9;
        float degset05=-11.9;
        float dif=1;

        //angle set0
        simxSetJointTargetPosition(clientID,joint01,degset01,simx_opmode_oneshot);
        simxSetJointTargetPosition(clientID,joint02,degset02,simx_opmode_oneshot);
        simxSetJointTargetPosition(clientID,joint03,degset03,simx_opmode_oneshot);
        simxSetJointTargetPosition(clientID,joint04,degset04,simx_opmode_oneshot);
        simxSetJointTargetPosition(clientID,joint05,degset05,simx_opmode_oneshot);
        bool balance_contral=true;


        clientID,auxiliaryData=simGetSimulatorMessage();


        while (clientID!=-1) {
            if (clientID==simxmessage_keypress) {
                if (auxiliaryData[1]==2009) { //up Key
                    degset01=degset01+dif;
                    simxSetJointTargetPosition(clientID,joint01,degset01,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==2010) { //down key
                    degset01=degset01-dif;
                    simxSetJointTargetPosition(clientID,joint01,degset01,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==2007) { //left key
                    degset02=degset02+dif;
                    simxSetJointTargetPosition(clientID,joint02,degset02,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==2008) {  //right key
                    degset02=degset02-dif;
                    simxSetJointTargetPosition(clientID,joint02,degset02,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==56) { //num8 key
                    degset03=degset03+dif;
                    simxSetJointTargetPosition(clientID,joint03,degset03,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==50) { //num2 key
                    degset03=degset03-dif;
                    simxSetJointTargetPosition(clientID,joint03,degset03,simx_opmode_oneshot);

                }
                if (auxiliaryData[1]==54) { //num6 key
                    degset04=degset04+dif;
                    simxSetJointTargetPosition(clientID,joint04,degset04,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==52) { //num4 key
                    degset04=degset04-dif;
                    simxSetJointTargetPosition(clientID,joint04,degset04,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==49) { //mun1 key
                    degset05=degset05+dif;
                    simxSetJointTargetPosition(clientID,joint05,degset05,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==51) { //num3 key
                    degset05=degset05-dif;
                    simxSetJointTargetPosition(clientID,joint05,degset05,simx_opmode_oneshot);
                }




                if  (auxiliaryData[1]==48){ //setting auto Balance at num0 key
                    if (balance_contral==true){
                        balance_contral=false;
                    }else{
                        balance_contral=true;
                    }
                }
                if (balance_contral==true) {
                    if (auxiliaryData[1]==2007) {
                        degset03=degset03+dif ;
                        simxSetJointTargetPosition(clientID,joint03,degset03,simx_opmode_oneshot);
                    }
                    if (auxiliaryData[1]==2008) {
                        degset03=degset03-dif;
                        simxSetJointTargetPosition(clientID,joint03,degset03,simx_opmode_oneshot);
                        }
                    }
                }
        clientID,auxiliaryData=simGetSimulatorMessage();
        }
    }
    simxFinish(clientID);
    return clientID;
}
</pre>
<p><br/><br/></p>
<h2>remoteAPI in python</h2>
<h3>0513</h3>
<p>嘗試用remoteAPI鍵盤控制機械手臂，不過手臂上段模擬時出現甩動問題，因此只展示下半部分。</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/bXgvrjMNPpQ" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>程式碼</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># File created by Thibaut Royer, Epitech school
# thibaut1.royer@epitech.eu
# It intends to be an example program for the "Two wheels, one arm" educative project.

import sim as vrep
import math
import random
import time
import keyboard

print ('Start')

# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.0.4', 19997, True, True, 5000, 5)

if clientID != -1:
    print ('Connected to remote API server')
    
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823218",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")

    # Communication operating mode with the remote API : wait for its answer before continuing (blocking mode)
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiConstants.htm
    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming

    # Try to retrieve motors and robot handlers
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectHandle
    vrep.simxStartSimulation(clientID, opmode)
    ret,base_handle=vrep.simxGetObjectHandle(clientID,"joint1_",opmode)
    ret,bottom_handle=vrep.simxGetObjectHandle(clientID,"joint2_",opmode)
    ret,top_handle=vrep.simxGetObjectHandle(clientID,"joint3_",opmode)
    ret,rotate_handle=vrep.simxGetObjectHandle(clientID,"joint4_",opmode)
    ret,wrist_handle=vrep.simxGetObjectHandle(clientID,"joint5_",opmode)
    while True:
        #Clockwise
        if keyboard.is_pressed("a"):
         vrep.simxSetJointTargetVelocity(clientID,base_handle,0.1,opmode)
        #anti-Clockwise 
        if keyboard.is_pressed("f"):
         vrep.simxSetJointTargetVelocity(clientID,base_handle,-0.1,opmode)
        #bottom_handle up
        if keyboard.is_pressed ("w"):
         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,0.1,opmode)
        #bottom_handle down
        if keyboard.is_pressed ("s"):
         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,-0.1,opmode)
         #top_handle up
        if keyboard.is_pressed ("e"):
         vrep.simxSetJointTargetVelocity(clientID,top_handle,0.1,opmode)
         #top_handle down
        if keyboard.is_pressed ("d"):
         vrep.simxSetJointTargetVelocity(clientID,top_handle,-0.1,opmode)
         #rotate
        if keyboard.is_pressed ("r"):
         vrep.simxSetJointTargetVelocity(clientID,rotate_handle,0.1,opmode)
         #wrist_handle left
        if keyboard.is_pressed ("j"):
         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,0.1,opmode)
         #wrist_handle right
        if keyboard.is_pressed ("k"):
         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,-0.1,opmode)
         #stop
        if keyboard.is_pressed ("space"):
         vrep.simxSetJointTargetVelocity(clientID,base_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,top_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,rotate_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,0,opmode)


else:
    print ('Failed connecting to remote API server')
    print ('End')
</pre>
<h1>stage3</h1>
<h2>每周進度影片</h2>
<h3>第九周</h3>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="//www.youtube.com/embed/dgA4QAF2RTI" width="560"></iframe></p>
<h3>第十周</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/zyOrRSpavpE" width="560"></iframe></p>
<h2>task</h2>
<h3>task1</h3>
<p>無</p>
<h3>task2</h3>
<p><span>無</span></p>
<h3>task3</h3>
<p><span>無</span></p>
<h2>討論</h2>
<h3>discord</h3>
<h3>第一次討論</h3>
<p>4/27</p>
<p><img alt="" height="624" src="/images/第一次討論1.png" width="1000"/></p>
<p><img alt="" height="662" src="/images/第一次討論2.png" width="1000"/><img alt="" height="667" src="/images/第一次討論3.png" width="1000"/><img alt="" height="664" src="/images/第一次討論4.png" width="1000"/><img alt="" height="667" src="/images/第一次討論5.png" width="1000"/><img alt="" height="653" src="/images/第一次討論6.png" width="1000"/><img alt="" height="656" src="/images/第一次討論7.png" width="1000"/><img alt="" height="670" src="/images/第一次討論8.png" width="1000"/><img alt="" height="655" src="/images/第一次討論9.png" width="1000"/><img alt="" height="657" src="/images/第一次討論10.png" width="1000"/><img alt="" height="665" src="/images/第一次討論11.png" width="1000"/><img alt="" height="668" src="/images/第一次討論12.png" width="1000"/><img alt="" height="669" src="/images/第一次討論13.png" width="1000"/></p>
<h3>第二次討論</h3>
<p><img alt="" height="624" src="/images/第二次討論1.PNG" width="1000"/></p>
<p><img alt="" height="624" src="/images/第二次討論2.PNG" width="1000"/></p>
<p><img alt="" height="624" src="/images/第二次討論3.PNG" width="1000"/></p>
<p><img alt="" height="324" src="/images/第二次討論4.PNG" width="1000"/></p>