<h1>About</h1>
<p><span>小組個人成員倉儲/</span>小組個人成員網頁</p>
<p><a href="https://github.com/40823211/cd2021">40823211</a><a href="https://40823211.github.io/cd2021/content/index.html">/40823211</a> 陳昱愷</p>
<p><a href="https://github.com/40823214/cd2021">40823214</a>/<a href="https://40823214.github.io/cd2021/content/index.html">40823214</a> <span>林厚宇</span></p>
<p><a href="https://github.com/40823216/cd2021">40823216</a><a href="https://40823216.github.io/cd2021/content/index.html">/40823216</a> <span>陳弘勛</span></p>
<p><a href="https://github.com/40823218/cd2021">40823218</a><a href="https://40823218.github.io/cd2021/content/index.html">/40823218</a> <span>陳致文</span></p>
<p><a href="https://github.com/40823225/cd2021">40823225</a><a href="https://40823225.github.io/cd2021/content/index.html">/40823225</a> <span>徐誠隆 </span></p>
<p><a href="https://github.com/40823238/cd2021">40823238</a><a href="https://40823238.github.io/cd2021/content/index.html">/40823238</a> <span>吳容輝</span></p>
<p><a href="https://github.com/40823247/cd2021">40823247</a><a href="https://40823247.github.io/cd2021/content/index.html">/40823247</a> <span>許力右test</span></p>
<p><a href="https://github.com/40823248/cd2021">40823248</a><a href="https://40823248.github.io/cd2021/content/index.html">/40823248</a> <span>劉彥廷</span></p>
<p><span>sshtest</span></p>
<p>-2</p>
<p>.....</p>
<h1>機械手臂</h1>
<p>原本我們的主題，是在我們原本在stage2-bg6所做的腳踏車衝擊測試機跟機械手臂在做選擇，但考慮到<span>腳踏車衝擊測試機的零件數過多及他所會遇到的力學相關的問題，所以我們最後討論出來的結果是，將主題訂為機械手臂。</span></p>
<h2>繪圖成果</h2>
<p>此為不含夾爪有六軸的機械手臂</p>
<p><span><img alt="" height="708" src="/images/機械手臂成品.jpg" width="890"/></span></p>
<h1>程式模擬</h1>
<h2>W10</h2>
<p><span>上網找的資料顯示coppeliasim上有一個編輯程式的選項</span></p>
<p><span>參考資料:<a href="https://zhuanlan.zhihu.com/p/105960079">https://zhuanlan.zhihu.com/p/105960079</a></span></p>
<p>4/27(二)因為繪圖部分還沒畫好，今天暫時用coppeliasim裡的機械手臂模型來模擬。</p>
<p>設定的主體上連結每個零件，各零件之間有可以旋轉的軸，以及連結的命令區塊</p>
<p>下圖為參考的機械手臂:</p>
<p><img alt="" height="336" src="/images/coppeliaSim_7DT9riixBZ.png" width="500"/></p>
<p><span>這是機械手臂的零件圖:</span></p>
<p><span><img alt="" height="500" src="/images/coppeliaSim_SfnwNoWqxG.png" width="322"/></span></p>
<h2>W11</h2>
<p><span>根據上網找的資料，發現COPPELIASIM的程式編譯語言為LUA，但仍可透過改變設定，來使用其他語言編譯。</span></p>
<p><span><img alt="" height="305" src="/images/chrome_ksKg2rL82f.png" width="500"/></span></p>
<p><span>以下為參考資料:</span></p>
<p><a href="https://blog.csdn.net/qq_29696095/article/details/104406971">https://blog.csdn.net/qq_29696095/article/details/104406971</a><br/><a href="https://blog.csdn.net/qq_29696095/article/details/104474081">https://blog.csdn.net/qq_29696095/article/details/104474081</a><br/><a href="https://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm">https://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm</a></p>
<p><a href="http://mde.tw/cd2021/downloads/V-REP%20Lecture.pdf">http://mde.tw/cd2021/downloads/V-REP%20Lecture.pdf</a><br/><a href="http://hades.mech.northwestern.edu/index.php/CoppeliaSim_Introduction">http://hades.mech.northwestern.edu/index.php/CoppeliaSim_Introduction</a><br/><a href="https://www.coppeliarobotics.com/helpFiles/index.html">https://www.coppeliarobotics.com/helpFiles/index.html</a><br/><a href="http://mde.tw/cd2021/content/V-rep.html">http://mde.tw/cd2021/content/V-rep.html</a></p>
<h1>CoppliaSim程式模擬</h1>
<h2>架設場景</h2>
<h3>0510對軸進行旋轉控制</h3>
<p>使用coppeliaSim 先叫出一個簡單的軸</p>
<p>來進行模擬控制</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/9m9_lNlXvfA" width="560"></iframe></p>
<p></p>
<h3>0513對方快進行XYZ軸控制</h3>
<p></p>
<p>建立方塊並且對其進行XYZ軸控制</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/d_3A25jRKEs" width="560"></iframe></p>
<p></p>
<p>程式碼如下</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    joint01=sim.getObjectHandle('joint01')
    joint02=sim.getObjectHandle('joint02')
    joint03=sim.getObjectHandle('joint03')
    set=0
    set1=0
    set2=0
end

function sysCall_actuation()
    -- put your actuation code here
    message,auxiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==2009) then
                set=set+0.01
                sim.setJointTargetPosition(joint01,set)
            end
            if (auxiliaryData[1]==2010) then
                set=set-0.01
                sim.setJointTargetPosition(joint01,set)
            end
            if (auxiliaryData[1]==2007) then
               set1=set1+0.01
               sim.setJointTargetPosition(joint02,set1)
            end
           if (auxiliaryData[1]==2008) then
              set1=set1-0.01
              sim.setJointTargetPosition(joint02,set1)
            end
            if (auxiliaryData[1]==50) then
               set2=set2+0.01
               sim.setJointTargetPosition(joint03,set2)
            end
           if (auxiliaryData[1]==56) then
              set2=set2-0.01
              sim.setJointTargetPosition(joint03,set2)
            end
        end
    message,auxiliaryData=sim.getSimulatorMessage()
    end
end</pre>
<p></p>
<h3>0513物件螺旋運動</h3>
<p>使用<span>線程腳本使方塊進行螺旋運動</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/4_rgcQVmUs0" width="560"></iframe></span></p>
<p>code</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_threadmain()
    jointx=sim.getObjectHandle('01')
    jointy=sim.getObjectHandle('02')
    jointz=sim.getObjectHandle('03')
    high=0
    
    for cycle=0,36000,1 do
        sim.setJointTargetPosition(jointx,0.3*(math.sin(cycle*math.pi/180)))
        sim.wait(0.01)
        sim.setJointTargetPosition(jointy,0.3*(math.cos(cycle*math.pi/180)))
        sim.wait(0.01)
        high=high+0.001
        sim.setJointTargetPosition(jointz,high)
        sim.wait(0.01)
        
    end
end</pre>
<h3>0510架設機械手臂場景</h3>
<p>將所有物件控制後直接進行模擬，檢測是否有異樣</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rUZ-taH8l-4" width="560"></iframe></p>
<h3>機械手臂場景微調</h3>
<p>嘗試使用程式控制</p>
<p>但是還是會亂跑</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/wfNZQoLKPFc" width="560"></iframe></p>
<p></p>
<p></p>
<h3>機械手臂場景路徑控制</h3>
<p>勉強可以控制路徑了(預先設定</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/TPKAXlE8dSc" width="560"></iframe></p>
<h3>機械手臂場景路徑控制</h3>
<p>可以透過程式來進行路徑的預先規劃</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ClpcrK5-4IQ" width="560"></iframe></p>
<p></p>
<h2>尋找控制代碼</h2>
<p>coppeliasim中</p>
<p>simGetSimulatorMessage()為讀取鍵盤狀態的指令</p>
<p>但是我們不知道指令是甚麼，所以寫了一段程式來檢測看每一個按鍵的指令是什麼</p>
<p>所以寫了這一支程式來檢測每一個按鈕的值</p>
<p>在coppeliaSim中叫出一個物件，然後對那個物件編寫程式如下</p>
<p>開始模擬後按下鍵盤鍵即可在下方視窗顯示對應的按鍵</p>
<p><img alt="" height="449" src="/images/findcode.jpg" width="800"/></p>
<p>程式碼如下</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_actuation()
    message,auxiliaryData=simGetSimulatorMessage()
	while message~=-1 do
		if (message==sim_message_keypress) then
			print(auxiliaryData[1])
			if (auxiliaryData[1]==string.byte(' ')) then
				-- space key was pressed
			end
		end
		message,auxiliaryData=simGetSimulatorMessage()
	end
end</pre>
<p></p>
<h2>控制解說</h2>
<p>5/11</p>
<p>方向鍵上,下，控制大臂的上下移動</p>
<p>方向鍵左,右，控制底座的旋轉</p>
<p>小鍵盤2,8 控制小臂上下移動</p>
<p>小鍵盤4,6 控制小臂的旋轉</p>
<p>小鍵盤1,3 控制手腕的轉動</p>
<p>小鍵盤0 控制小臂是否與大臂連動</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8Od8iPu0vRI" width="560"></iframe></p>
<p></p>
<h2>0513 Lua 新增夾爪控制</h2>
<p></p>
<p>新增一夾爪與兩個攝影機</p>
<p>夾爪可以夾取物品，攝影機可以方便對正要夾取的物品</p>
<p>圖檔:</p>
<p><a href="/downloads/機械手臂/Camera contral.ttt">Camera contral.ttt</a></p>
<p>參考影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/E8EAB7ePr_Y" width="560"></iframe></p>
<p></p>
<h2>0511 Programming in C++</h2>
<p>圖檔:</p>
<p><a href="/downloads/機械手臂/programmingl in C++ Unclear.ttt">programmingl in C++ Unclear.ttt</a></p>
<p>簡介:</p>
<p>目前還尚未寫出(5/11)，在編譯上還有問題，問題跟"remoteAPI in C++"中的問題一樣</p>
<p>並且尚未能找到能改語言的方法</p>
<p></p>
<p><img alt="" height="891" src="/images/C_1.jpg" width="800"/></p>
<p><img alt="" height="636" src="/images/C_2.jpg" width="800"/></p>
<p></p>
<h2>CoppeliaSim 教學</h2>
<h3>軸的旋轉教學</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/-8QNOsZnV1c" width="560"></iframe></p>
<p>程式碼</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    -- do some initialization here
    joint=sim.getObjectHandle('joint01')
end

function sysCall_actuation()
    -- put your actuation code here
    sim.setJointTargetPosition(joint,135*math.pi/180)
end</pre>
<h3>直線運動教學</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/KHClnqMEHfU" width="560"></iframe></p>
<p>程式指令</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    -- do some initialization here
    joint=sim.getObjectHandle('joint')
end

function sysCall_actuation()
    -- put your actuation code here
    sim.setJointTargetPosition(joint,50)
end</pre>
<h3>1-單軸直線運動</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ZbITEg3IuAc" width="560"></iframe></p>
<p>程式碼</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    -- do some initialization here
    joint=sim.getObjectHandle('joint')
    set=0
end
 
function sysCall_actuation()
    -- put your actuation code here
    message,auiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if(message==sim.message_keypress)then
            if(auiliaryData[1]==2009)then
                set=set+0.01
                sim.setJointTargetPosition(joint,set)
            end
        end
    message,auiliaryData=sim.getSimulatorMessage()
    end
end</pre>
<p></p>
<h3>2-可變速之旋轉運動</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7ui7HK5A3l4" width="560"></iframe></p>
<p>程式碼  (注:下方程式碼有修改 degset(每次旋轉的角度)不會小於1</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    -- do some initialization here
    joint=sim.getObjectHandle('joint')
    set=0
    degset=1
end
 
function sysCall_actuation()
    -- put your actuation code here
    message,auxiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==2009) then
            set=set+degset
            sim.setJointTargetPosition(joint,set*math.pi/180)
            end
            if (auxiliaryData[1]==2010) then
            set=set-degset
            sim.setJointTargetPosition(joint,set*math.pi/180)
            end
            if (auxiliaryData[1]==2007) then
                degset=degset+5
                print(degset)
            end
            if (auxiliaryData[1]==2008) then
                degset=degset-5
                if(degset&lt;1) then
                    degset=1
                end
                print(degset)
            end
        end
    message,auxiliaryData=sim.getSimulatorMessage()
    end
end
    </pre>
<h3>3-遙控攝影小汽車</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/nNmpBqzVHT0" width="560"></iframe></p>
<p>範例程式碼</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    -- do some initialization here
    f=sim.getObjectHandle('F')
    r=sim.getObjectHandle('R')
    speedf=10
    speedr=10
    Cam1=sim.getObjectHandle('Camera')
    CamView1=sim.floatingViewAdd(0.2,0.8,0.5,0.5,0)
    sim.adjustView(CamView1,Cam1,64)
end

function sysCall_cleanup() 
    sim.floatingViewRemove(CamView1)
end 
 
function sysCall_actuation()
    -- put your actuation code here
    message,auxiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==2007) then
                speedf=speedf-30
                speedr=speedr-30
                sim.setJointTargetPosition(f,speedf*math.pi/180)
                sim.setJointTargetPosition(r,speedr*math.pi/180)
            end
            if (auxiliaryData[1]==2008) then
                speedf=speedf+30
                speedr=speedr+30
                sim.setJointTargetPosition(f,speedf*math.pi/180)
                sim.setJointTargetPosition(r,speedr*math.pi/180)
            end
            if (auxiliaryData[1]==2009) then
                speedr=speedr-30
                sim.setJointTargetPosition(r,speedr*math.pi/180)
            end
            if (auxiliaryData[1]==2010) then
                speedf=speedf-30
                sim.setJointTargetPosition(f,speedf*math.pi/180)
            end
        end
    message,auxiliaryData=sim.getSimulatorMessage()
    end
end</pre>
<p></p>
<h3>CODE 指令解說</h3>
<p>部分LUA指令講解</p>
<p><strong>1.sim.getObjectHandle</strong></p>
<p>使用範例如下</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">XXX=sim.getObjectHandle('joint')</pre>
<p>講解 XXX為一個自行定義的名詞，此指令為定義XXX為一個連接軸，而('joint')為該軸在場景裡面的名稱</p>
<p></p>
<p><strong>2.sim.setJointTargetPosition</strong></p>
<p><span>使用範例如下</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sim.setJointTargetPosition(XXX,90)</pre>
<p>講解 XXX移動至90這個位置，或旋轉至90rad，XXX請參見第一個指令講解,角度預設為RAD</p>
<p>若要需求為旋轉至90deg，指令參考如下</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sim.setJointTargetPosition(XXX,90*math.pi/180)</pre>
<p></p>
<p><strong>3.sim.getSimulatorMessage</strong></p>
<p>使用範例如下</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">message,auxiliaryData=sim.getSimulatorMessage()
while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==2009) then
               指定要做的事情
            end
         end
message,auxiliaryData=sim.getSimulatorMessage()
end
</pre>
<p></p>
<p>講解</p>
<p>第一行</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">message,auxiliaryData=sim.getSimulatorMessage()</pre>
<p>message代表跟鍵盤對接的狀態</p>
<p>auxiliaryData代表讀取到鍵盤的值</p>
<p>第二行的開始</p>
<p>當(while)"message的值不等於-1時</p>
<p>若(if)<span>auxiliaryData讀取到的值為2009</span></p>
<p><span>進行要做的事情，可以是上面第二項"sim.setJointTargetPosition"或其他指令</span></p>
<p><span>可參考<a href="https://40823225.github.io/stage3-bg6/content/%E5%B0%8B%E6%89%BE%E6%8E%A7%E5%88%B6%E4%BB%A3%E7%A2%BC.html">尋找控制代碼</a></span></p>
<p><span></span></p>
<p><strong>4.simwat</strong></p>
<p><span>使用範例</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sim.wait(0.01)</pre>
<p>只能在線程控制中使用(Threaded chil script)</p>
<p>為暫停指令，括弧內單位為秒</p>
<h3>remoteApi python 指令對照</h3>
<p><strong>1.simxGetObjectHandle</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">ret,XXX=vrep.simxGetObjectHandle(clientID,"joint",opmode)</pre>
<p><span>XXX為一個自行定義的名詞，此指令為定義XXX為一個連接軸，而('joint')為該軸在場景裡面的名稱</span></p>
<p>與Lua語法類似</p>
<p><strong>2.simxSetJointTargetPosition</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"> vrep.simxSetJointTargetPosition(clientID,XXX,90,opmode)</pre>
<p>講解 XXX移動至90這個位置，或旋轉至90rad，XXX請參見第一個指令講解,角度預設為RAD</p>
<p>若要需求為旋轉至90deg，指令參考如下</p>
<p><span>與Lua語法類似</span></p>
<h3>機械手臂設定範例</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/s8eRsonlKHo" width="560"></iframe></p>
<p></p>
<h3>按鍵控制代碼</h3>
<table border="1" cellpadding="0" cellspacing="0" style="width: 590px;">
<tbody>
<tr style="height: 26px;">
<td style="width: 40px; height: 26px; text-align: center;"><strong>按鍵</strong></td>
<td style="width: 71px; height: 26px; text-align: center;">對應代碼</td>
<td style="width: 34px; height: 26px; text-align: center;"><strong>按鍵</strong></td>
<td style="width: 69px; height: 26px; text-align: center;"><span>對應代碼</span></td>
<td style="width: 45px; height: 26px; text-align: center;"><strong>按鍵</strong></td>
<td style="width: 64px; height: 26px; text-align: center;"><span>對應代碼</span></td>
<td style="width: 50px; height: 26px; text-align: center;"><strong>按鍵</strong></td>
<td style="width: 71px; height: 26px; text-align: center;"><span>對應代碼</span></td>
<td style="width: 42px; height: 26px; text-align: center;"><strong>按鍵</strong></td>
<td style="width: 62px; height: 26px; text-align: center;"><span>對應代碼</span></td>
<td style="width: 40.9271px; height: 26px; text-align: center;"><strong>按鍵</strong></td>
<td style="width: 74.0729px; height: 26px; text-align: center;"><span>對應代碼</span></td>
</tr>
<tr style="height: 26px;">
<td style="width: 40px; height: 26px; text-align: center;"><strong>a</strong></td>
<td style="width: 71px; height: 26px; text-align: center;">97</td>
<td style="width: 34px; height: 26px; text-align: center;"><strong>j</strong></td>
<td style="width: 69px; height: 26px; text-align: center;">106</td>
<td style="width: 45px; height: 26px; text-align: center;"><strong>s</strong></td>
<td style="width: 64px; height: 26px; text-align: center;">115</td>
<td style="width: 50px; height: 26px; text-align: center;"><strong>0</strong></td>
<td style="width: 71px; height: 26px; text-align: center;">48</td>
<td style="width: 42px; height: 26px; text-align: center;"><strong>9</strong></td>
<td style="width: 62px; height: 26px; text-align: center;">57</td>
<td style="width: 40.9271px; height: 26px; text-align: center;"><strong>.</strong></td>
<td style="width: 74.0729px; height: 26px; text-align: center;">46</td>
</tr>
<tr style="height: 26px;">
<td style="width: 40px; height: 26px; text-align: center;"><strong>b</strong></td>
<td style="width: 71px; height: 26px; text-align: center;">98</td>
<td style="width: 34px; height: 26px; text-align: center;"><strong>k</strong></td>
<td style="width: 69px; height: 26px; text-align: center;">107</td>
<td style="width: 45px; height: 26px; text-align: center;"><strong>t</strong></td>
<td style="width: 64px; height: 26px; text-align: center;">116</td>
<td style="width: 50px; height: 26px; text-align: center;"><strong>1</strong></td>
<td style="width: 71px; height: 26px; text-align: center;">49</td>
<td style="width: 42px; height: 26px; text-align: center;"><strong>+</strong></td>
<td style="width: 62px; height: 26px; text-align: center;">43</td>
<td style="width: 40.9271px; height: 26px; text-align: center;"><strong>;</strong></td>
<td style="width: 74.0729px; height: 26px; text-align: center;">59</td>
</tr>
<tr style="height: 26px;">
<td style="width: 40px; height: 26px; text-align: center;"><strong>c</strong></td>
<td style="width: 71px; height: 26px; text-align: center;">99</td>
<td style="width: 34px; height: 26px; text-align: center;"><strong>l</strong></td>
<td style="width: 69px; height: 26px; text-align: center;">108</td>
<td style="width: 45px; height: 26px; text-align: center;"><strong>u</strong></td>
<td style="width: 64px; height: 26px; text-align: center;">117</td>
<td style="width: 50px; height: 26px; text-align: center;"><strong>2</strong></td>
<td style="width: 71px; height: 26px; text-align: center;">50</td>
<td style="width: 42px; height: 26px; text-align: center;"><strong>-</strong></td>
<td style="width: 62px; height: 26px; text-align: center;">45</td>
<td style="width: 40.9271px; height: 26px; text-align: center;"><strong>'</strong></td>
<td style="width: 74.0729px; height: 26px; text-align: center;">39</td>
</tr>
<tr style="height: 26px;">
<td style="width: 40px; height: 26px; text-align: center;"><strong>d</strong></td>
<td style="width: 71px; height: 26px; text-align: center;">100</td>
<td style="width: 34px; height: 26px; text-align: center;"><strong>m</strong></td>
<td style="width: 69px; height: 26px; text-align: center;">109</td>
<td style="width: 45px; height: 26px; text-align: center;"><strong>v</strong></td>
<td style="width: 64px; height: 26px; text-align: center;">118</td>
<td style="width: 50px; height: 26px; text-align: center;"><strong>3</strong></td>
<td style="width: 71px; height: 26px; text-align: center;">51</td>
<td style="width: 42px; height: 26px; text-align: center;"><strong>*</strong></td>
<td style="width: 62px; height: 26px; text-align: center;">42</td>
<td style="width: 40.9271px; height: 26px; text-align: center;"><strong>[</strong></td>
<td style="width: 74.0729px; height: 26px; text-align: center;">91</td>
</tr>
<tr style="height: 28px;">
<td style="width: 40px; height: 28px; text-align: center;"><strong>e</strong></td>
<td style="width: 71px; height: 28px; text-align: center;">101</td>
<td style="width: 34px; height: 28px; text-align: center;"><strong>n</strong></td>
<td style="width: 69px; height: 28px; text-align: center;">110</td>
<td style="width: 45px; height: 28px; text-align: center;"><strong>w</strong></td>
<td style="width: 64px; height: 28px; text-align: center;">119</td>
<td style="width: 50px; height: 28px; text-align: center;"><strong>4</strong></td>
<td style="width: 71px; height: 28px; text-align: center;">52</td>
<td style="width: 42px; height: 28px; text-align: center;"><strong>/</strong></td>
<td style="width: 62px; height: 28px; text-align: center;">47</td>
<td style="width: 40.9271px; height: 28px; text-align: center;"><strong>]</strong></td>
<td style="width: 74.0729px; height: 28px; text-align: center;">93</td>
</tr>
<tr style="height: 28.1597px;">
<td style="width: 40px; height: 28.1597px; text-align: center;"><strong>f</strong></td>
<td style="width: 71px; height: 28.1597px; text-align: center;">102</td>
<td style="width: 34px; height: 28.1597px; text-align: center;"><strong>o</strong></td>
<td style="width: 69px; height: 28.1597px; text-align: center;">111</td>
<td style="width: 45px; height: 28.1597px; text-align: center;"><strong>x</strong></td>
<td style="width: 64px; height: 28.1597px; text-align: center;">120</td>
<td style="width: 50px; height: 28.1597px; text-align: center;"><strong>5</strong></td>
<td style="width: 71px; height: 28.1597px; text-align: center;">53</td>
<td style="width: 42px; height: 28.1597px; text-align: center;"><strong>=</strong></td>
<td style="width: 62px; height: 28.1597px; text-align: center;">61</td>
<td style="width: 40.9271px; height: 28.1597px; text-align: center;"><strong>方向鍵上</strong></td>
<td style="width: 74.0729px; height: 28.1597px; text-align: center;">2007</td>
</tr>
<tr style="height: 28px;">
<td style="width: 40px; height: 28px; text-align: center;"><strong>g</strong></td>
<td style="width: 71px; height: 28px; text-align: center;">103</td>
<td style="width: 34px; height: 28px; text-align: center;"><strong>p</strong></td>
<td style="width: 69px; height: 28px; text-align: center;">112</td>
<td style="width: 45px; height: 28px; text-align: center;"><strong>y</strong></td>
<td style="width: 64px; height: 28px; text-align: center;">121</td>
<td style="width: 50px; height: 28px; text-align: center;"><strong>6</strong></td>
<td style="width: 71px; height: 28px; text-align: center;">54</td>
<td style="width: 42px; height: 28px; text-align: center;"><strong>`</strong></td>
<td style="width: 62px; height: 28px; text-align: center;">96</td>
<td style="width: 40.9271px; height: 28px; text-align: center;"><strong>方向鍵下</strong></td>
<td style="width: 74.0729px; height: 28px; text-align: center;">2008</td>
</tr>
<tr style="height: 28px;">
<td style="width: 40px; height: 28px; text-align: center;"><strong>h</strong></td>
<td style="width: 71px; height: 28px; text-align: center;">104</td>
<td style="width: 34px; height: 28px; text-align: center;"><strong>q</strong></td>
<td style="width: 69px; height: 28px; text-align: center;">113</td>
<td style="width: 45px; height: 28px; text-align: center;"><strong>z</strong></td>
<td style="width: 64px; height: 28px; text-align: center;">122</td>
<td style="width: 50px; height: 28px; text-align: center;"><strong>7</strong></td>
<td style="width: 71px; height: 28px; text-align: center;">55</td>
<td style="width: 42px; height: 28px; text-align: center;"><strong>\</strong></td>
<td style="width: 62px; height: 28px; text-align: center;">92</td>
<td style="width: 40.9271px; height: 28px; text-align: center;"><strong>方向鍵左</strong></td>
<td style="width: 74.0729px; height: 28px; text-align: center;">2009</td>
</tr>
<tr style="height: 28px;">
<td style="width: 40px; height: 28px; text-align: center;"><strong>i</strong></td>
<td style="width: 71px; height: 28px; text-align: center;">105</td>
<td style="width: 34px; height: 28px; text-align: center;"><strong>r</strong></td>
<td style="width: 69px; height: 28px; text-align: center;">114</td>
<td style="width: 45px; height: 28px; text-align: center;"></td>
<td style="width: 64px; height: 28px; text-align: center;"></td>
<td style="width: 50px; height: 28px; text-align: center;"><strong>8</strong></td>
<td style="width: 71px; height: 28px; text-align: center;">56</td>
<td style="width: 42px; height: 28px; text-align: center;"><strong>,</strong></td>
<td style="width: 62px; height: 28px; text-align: center;">44</td>
<td style="width: 40.9271px; height: 28px; text-align: center;"><strong>方向鍵右</strong></td>
<td style="width: 74.0729px; height: 28px; text-align: center;">2010</td>
</tr>
</tbody>
</table>
<p></p>
<h2>舊資料</h2>
<h3>0511 Programming in Lua on multiple program</h3>
<p>圖檔下載</p>
<p><a href="/downloads/機械手臂/programming in Lua in multiple program.ttt">programming in Lua in multiple program.ttt</a></p>
<p>簡介:</p>
<p>最基本的控制</p>
<p>在單一軸上對單一軸做程式控制</p>
<p>優點: 程式簡單，變數少</p>
<p>缺顛: 要修改程式不易，有幾個程式就需要修改幾次</p>
<p><img alt="" height="427" src="/images/pro1.jpg" width="800"/></p>
<p><img alt="" height="495" src="/images/pro2.jpg" width="800"/></p>
<p><img alt="" height="828" src="/images/pro3.jpg" width="800"/></p>
<p><img alt="" height="587" src="/images/pro4.jpg" width="800"/></p>
<p><img alt="" height="543" src="/images/pro5.jpg" width="800"/></p>
<h3>0511 Programming in Lua in One program</h3>
<p>圖檔</p>
<p><a href="/downloads/機械手臂/programming in Lua in One program.ttt">programming in Lua in One program.ttt</a></p>
<p>簡介</p>
<p>使用單一程式進行控制</p>
<p>優點: 程式只有一個，所以可以在編寫上比較輕鬆</p>
<p>缺點: 程式較長，尋找特定函式較不易，變數較多程式控制還多，命名上須留意</p>
<p><img alt="" height="1091" src="/images/proall_1.jpg" width="800"/></p>
<p><img alt="" height="423" src="/images/proall_2.jpg" width="800"/></p>
<p></p>
<h1>task2-remoteAPI</h1>
<h2>自動吹笛子機</h2>
<p>Stage1-bg6 自動吹笛子機remoteApi</p>
<p>控制:</p>
<p>f,d,s,j,k,l 分別控制六根不同的桿子往下</p>
<p>r,e,w,u,i,o 控制六根桿子往上</p>
<p></p>
<p>下載</p>
<p><a href="/downloads/吹笛子程式.rar">吹笛子程式.rar</a></p>
<p><a href="/downloads/自動吹笛子remoteApi.ttt">自動吹笛子remoteApi.ttt</a></p>
<p>參考影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/OpoXLGUx0mQ" width="560"></iframe></p>
<p>程式參考</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import keyboard
import math
#from winsound import Beep

 
print ('Start')
 

vrep.simxFinish(-1)

clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID != -1:
    print ('Connected to remote API server')
     
    res = vrep.simxAddStatusbarMessage(
        clientID, "test-25",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
 
    
    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming
 
    
    vrep.simxStartSimulation(clientID, opmode)
    ret,joint1=vrep.simxGetObjectHandle(clientID,"Revolute3_1",opmode)
    ret,joint2=vrep.simxGetObjectHandle(clientID,"Revolute3_2",opmode)
    ret,joint3=vrep.simxGetObjectHandle(clientID,"Revolute3_3",opmode)
    ret,joint4=vrep.simxGetObjectHandle(clientID,"Revolute3_4",opmode)
    ret,joint5=vrep.simxGetObjectHandle(clientID,"Revolute3_5",opmode)
    ret,joint6=vrep.simxGetObjectHandle(clientID,"Revolute3_6",opmode)

    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint0_1",opmode)
    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint0_2",opmode)
    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint0_3",opmode)
    ret,joint04=vrep.simxGetObjectHandle(clientID,"joint0_4",opmode)
    ret,joint05=vrep.simxGetObjectHandle(clientID,"joint0_5",opmode)
    ret,joint06=vrep.simxGetObjectHandle(clientID,"joint0_6",opmode)

    degr=-12*math.pi/180
    py=0.05
    set1=False
    set2=False
    set3=False
    set4=False
    set5=False
    set6=False

    vrep.simxSetJointTargetPosition(clientID,joint1,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint2,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint3,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint4,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint04,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint5,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint05,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint6,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint06,0,opmode)

    while True:
        
        if keyboard.is_pressed("f"):
            if set1==False:
                vrep.simxSetJointTargetPosition(clientID,joint1,degr,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint01,py,opmode)
                set1=True
        if keyboard.is_pressed("d"):
            if set2==False:
                vrep.simxSetJointTargetPosition(clientID,joint2,degr,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint02,py,opmode)
                set2=True
        if keyboard.is_pressed("s"):
            if set3==False:
                vrep.simxSetJointTargetPosition(clientID,joint3,degr,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint03,py,opmode)
                set3=True
        if keyboard.is_pressed("j"):
            if set4==False:
                vrep.simxSetJointTargetPosition(clientID,joint4,degr,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint04,py,opmode)
                set4=True
        if keyboard.is_pressed("k"):
            if set5==False:
                vrep.simxSetJointTargetPosition(clientID,joint5,degr,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint05,py,opmode)
                set5=True
        if keyboard.is_pressed("l"):
            if set6==False:
                vrep.simxSetJointTargetPosition(clientID,joint6,degr,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint06,py,opmode)
                set6=True

        
        if keyboard.is_pressed("r"):
            if set1==True:
                vrep.simxSetJointTargetPosition(clientID,joint1,0,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)
                set1=False
        if keyboard.is_pressed("e"):
            if set2==True:
                vrep.simxSetJointTargetPosition(clientID,joint2,0,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)
                set2=False
        if keyboard.is_pressed("w"):
            if set3==True:
                vrep.simxSetJointTargetPosition(clientID,joint3,0,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)
                set3=False
        if keyboard.is_pressed("u"):
            if set4==True:
                vrep.simxSetJointTargetPosition(clientID,joint4,0,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint04,0,opmode)
                set4=False
        if keyboard.is_pressed("i"):
            if set5==True:
                vrep.simxSetJointTargetPosition(clientID,joint5,0,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint05,0,opmode)
                set5=False
        if keyboard.is_pressed("o"):
            if set6==True:
                vrep.simxSetJointTargetPosition(clientID,joint6,0,opmode)
                vrep.simxSetJointTargetPosition(clientID,joint06,0,opmode)
                set6=False
        
        #if(set1==true ):
            #Beep(422, 3000) 
        
 
 
else:
    print ('Failed connecting to remote API server')
    print ('End')</pre>
<p></p>
<p></p>
<h2>3D列印機</h2>
<p>使用python remoteApi進行遠端控制</p>
<p>控制:</p>
<p>上下左右控制噴頭的上下左右</p>
<p>空白鍵往上</p>
<p>C鍵往下</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Ib3lePX2Pn0" width="560"></iframe></p>
<p>程式參考</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import keyboard
 
print ('Start')
 
# Close eventual old connections
vrep.simxFinish(-1)

# Connect to V-REP remote server
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID != -1:
    print ('Conipconfigected to remote API server')
    
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823214",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
 

    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming

    vrep.simxStartSimulation(clientID, opmode)

    ret,joint1=vrep.simxGetObjectHandle(clientID,"X",opmode)
    ret,joint2=vrep.simxGetObjectHandle(clientID,"Y",opmode)
    ret,joint3=vrep.simxGetObjectHandle(clientID,"Z",opmode)
    dx=0
    dy=0
    dz=0
    dt=0.005
    cont=0
    rangeR=0.013
    max_h=0.35
    vrep.simxSetJointTargetPosition(clientID,joint1,dx,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint2,dx,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint3,dx,opmode)

    while True:
        #Clockwise
        if keyboard.is_pressed("8"):
            dx=dx+dt
            cont=float(math.pow(dx,2)+math.pow(dy,2))
            if cont&lt;rangeR:
                vrep.simxSetJointTargetPosition(clientID,joint1,dx,opmode)
                print(dx,dy,dz)
            else:
                print("Out of range")
                dx=dx-dt
        if keyboard.is_pressed("2"):
            dx=dx-dt
            cont=float(math.pow(dx,2)+math.pow(dy,2))
            if cont&lt;rangeR:
                vrep.simxSetJointTargetPosition(clientID,joint1,dx,opmode)
                print(dx,dy,dz)
            else:
                print("Out of range")
                dx=dx+dt
        if keyboard.is_pressed("4"):
            dy=dy+dt
            cont=float(math.pow(dx,2)+math.pow(dy,2))
            if cont&lt;rangeR:
                vrep.simxSetJointTargetPosition(clientID,joint2,dy,opmode)
                print(dx,dy,dz)
            else:
                print("Out of range")
                dy=dy-dt
        if keyboard.is_pressed("6"):
            dy=dy-dt
            cont=float(math.pow(dx,2)+math.pow(dy,2))
            if cont&lt;rangeR:
                vrep.simxSetJointTargetPosition(clientID,joint2,dy,opmode)
                print(dx,dy,dz)
            else:
                print("Out of range")
                dy=dy+dt
        if keyboard.is_pressed("space"):    
            dz=dz+dt   
            if dz&lt;max_h:       
                vrep.simxSetJointTargetPosition(clientID,joint3,dz,opmode)
                print(dx,dy,dz)
            else:
                print("too high")
                dz=dz-dt 
        if keyboard.is_pressed("c"):
            dz=dz-dt
            if dz&lt;0:
                print("too low")
                dz=0
            else:
                vrep.simxSetJointTargetPosition(clientID,joint3,dz,opmode)
                print(dx,dy,dz)
    else:
        print ('Failed connecting to remote API server')
        print ('End')</pre>
<p></p>
<h2>remoteAPI in C++</h2>
<h3>0511</h3>
<p>嘗試以C++最為remoteAPI控制的語言</p>
<p>compiler為code block in Win10</p>
<p>不論怎麼修改在</p>
<p>後還是出現問題</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">simxGetObjectHandle(clientID, "joint1", &amp;joint01, simx_opmode_oneshot_wait);</pre>
<p>上程式片段中</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">simx_opmode_oneshot_wait</pre>
<p>此定義一直出現error，內容如下</p>
<p>error: 'simx_opmode_oneshot_wait' was not declared in this scope</p>
<p>中譯: <span>simx_opmode_oneshot_wait 定義不明</span></p>
<p><span>但是在尋找網路上的範例，寫法也都是如我程式中一樣，目前還在尋找解決方法</span></p>
<p><span><img alt="" height="160" src="/images/codeblock.jpg" width="800"/></span></p>
<p><span></span></p>
<p><span>附上程式</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;Windows.h&gt;
#include &lt;iostream&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;math.h&gt;


extern "C" {
    #include "remoteAPI/extApi.h"
}



using namespace std;

int main(){
    int clientID = 0;
    simxFinish(-1);
    clientID = simxStart((simxChar*)"127.0.0.1", 19997, true, true, 5000, 5);
    Sleep(1);
    if (clientID != -1)
    {
        int joint01;
        int joint02;
        int joint03;
        int joint04;
        int joint05;
        simxGetObjectHandle(clientID, "joint1", &amp;joint01, simx_opmode_oneshot_wait);//setting
        simxGetObjectHandle(clientID, "joint2", &amp;joint02, simx_opmode_oneshot_wait);
        simxGetObjectHandle(clientID, "joint3", &amp;joint03, simx_opmode_oneshot_wait);
        simxGetObjectHandle(clientID, "joint4", &amp;joint04, simx_opmode_oneshot_wait);
        simxGetObjectHandle(clientID, "joint5", &amp;joint05, simx_opmode_oneshot_wait);


        float degset01=-11.9;
        float degset02=34.69;
        float degset03=-20.2;
        float degset04=-11.9;
        float degset05=-11.9;
        float dif=1;

        //angle set0
        simxSetJointTargetPosition(clientID,joint01,degset01,simx_opmode_oneshot);
        simxSetJointTargetPosition(clientID,joint02,degset02,simx_opmode_oneshot);
        simxSetJointTargetPosition(clientID,joint03,degset03,simx_opmode_oneshot);
        simxSetJointTargetPosition(clientID,joint04,degset04,simx_opmode_oneshot);
        simxSetJointTargetPosition(clientID,joint05,degset05,simx_opmode_oneshot);
        bool balance_contral=true;


        clientID,auxiliaryData=simGetSimulatorMessage();


        while (clientID!=-1) {
            if (clientID==simxmessage_keypress) {
                if (auxiliaryData[1]==2009) { //up Key
                    degset01=degset01+dif;
                    simxSetJointTargetPosition(clientID,joint01,degset01,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==2010) { //down key
                    degset01=degset01-dif;
                    simxSetJointTargetPosition(clientID,joint01,degset01,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==2007) { //left key
                    degset02=degset02+dif;
                    simxSetJointTargetPosition(clientID,joint02,degset02,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==2008) {  //right key
                    degset02=degset02-dif;
                    simxSetJointTargetPosition(clientID,joint02,degset02,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==56) { //num8 key
                    degset03=degset03+dif;
                    simxSetJointTargetPosition(clientID,joint03,degset03,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==50) { //num2 key
                    degset03=degset03-dif;
                    simxSetJointTargetPosition(clientID,joint03,degset03,simx_opmode_oneshot);

                }
                if (auxiliaryData[1]==54) { //num6 key
                    degset04=degset04+dif;
                    simxSetJointTargetPosition(clientID,joint04,degset04,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==52) { //num4 key
                    degset04=degset04-dif;
                    simxSetJointTargetPosition(clientID,joint04,degset04,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==49) { //mun1 key
                    degset05=degset05+dif;
                    simxSetJointTargetPosition(clientID,joint05,degset05,simx_opmode_oneshot);
                }
                if (auxiliaryData[1]==51) { //num3 key
                    degset05=degset05-dif;
                    simxSetJointTargetPosition(clientID,joint05,degset05,simx_opmode_oneshot);
                }




                if  (auxiliaryData[1]==48){ //setting auto Balance at num0 key
                    if (balance_contral==true){
                        balance_contral=false;
                    }else{
                        balance_contral=true;
                    }
                }
                if (balance_contral==true) {
                    if (auxiliaryData[1]==2007) {
                        degset03=degset03+dif ;
                        simxSetJointTargetPosition(clientID,joint03,degset03,simx_opmode_oneshot);
                    }
                    if (auxiliaryData[1]==2008) {
                        degset03=degset03-dif;
                        simxSetJointTargetPosition(clientID,joint03,degset03,simx_opmode_oneshot);
                        }
                    }
                }
        clientID,auxiliaryData=simGetSimulatorMessage();
        }
    }
    simxFinish(clientID);
    return clientID;
}
</pre>
<p><br/><br/></p>
<h3>0512</h3>
<p>後來上網尋找解答發現疑似是complier的問題</p>
<p>於是切換為VS2019進行編譯</p>
<p>並且新增path及include至專案檔</p>
<p>在X64的環境下進行DeBug後</p>
<p>第一個錯誤是這個</p>
<p><img caption="false" height="164" src="/images/error01.jpg" width="450"/></p>
<p>並且出現以下錯誤</p>
<p><img alt="" height="147" src="/images/1620920746110.jpg" width="450"/></p>
<p>C4244為警示狀態外，其他錯誤經查詢發現似乎不能啟動"remotaApi.dll"的這個程式</p>
<p></p>
<p></p>
<h3>0512-2</h3>
<p>後來經過修改與PATH路徑修正</p>
<p>並且將remotaApi所需的標頭檔</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;exApi.h&gt;</pre>
<p>將其修改程式變成</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">extern "C" {
    #include "exApi.h" 
}</pre>
<p>但是似乎還是一樣</p>
<p><img alt="" height="321" src="/images/VS2019.jpg" width="800"/></p>
<p>目前正在尋找其他解法來修復</p>
<p></p>
<p></p>
<h2>remoteAPI in python</h2>
<h3>0513</h3>
<p>嘗試用remoteAPI鍵盤控制機械手臂，不過手臂上段模擬時出現甩動問題，因此只展示下半部分。</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/bXgvrjMNPpQ" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>程式碼</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># File created by Thibaut Royer, Epitech school
# thibaut1.royer@epitech.eu
# It intends to be an example program for the "Two wheels, one arm" educative project.

import sim as vrep
import math
import random
import time
import keyboard

print ('Start')

# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.0.4', 19997, True, True, 5000, 5)

if clientID != -1:
    print ('Connected to remote API server')
    
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823218",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")

    # Communication operating mode with the remote API : wait for its answer before continuing (blocking mode)
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiConstants.htm
    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming

    # Try to retrieve motors and robot handlers
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectHandle
    vrep.simxStartSimulation(clientID, opmode)
    ret,base_handle=vrep.simxGetObjectHandle(clientID,"joint1_",opmode)
    ret,bottom_handle=vrep.simxGetObjectHandle(clientID,"joint2_",opmode)
    ret,top_handle=vrep.simxGetObjectHandle(clientID,"joint3_",opmode)
    ret,rotate_handle=vrep.simxGetObjectHandle(clientID,"joint4_",opmode)
    ret,wrist_handle=vrep.simxGetObjectHandle(clientID,"joint5_",opmode)
    while True:
        #Clockwise
        if keyboard.is_pressed("a"):
         vrep.simxSetJointTargetVelocity(clientID,base_handle,0.1,opmode)
        #anti-Clockwise 
        if keyboard.is_pressed("f"):
         vrep.simxSetJointTargetVelocity(clientID,base_handle,-0.1,opmode)
        #bottom_handle up
        if keyboard.is_pressed ("w"):
         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,0.1,opmode)
        #bottom_handle down
        if keyboard.is_pressed ("s"):
         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,-0.1,opmode)
         #top_handle up
        if keyboard.is_pressed ("e"):
         vrep.simxSetJointTargetVelocity(clientID,top_handle,0.1,opmode)
         #top_handle down
        if keyboard.is_pressed ("d"):
         vrep.simxSetJointTargetVelocity(clientID,top_handle,-0.1,opmode)
         #rotate
        if keyboard.is_pressed ("r"):
         vrep.simxSetJointTargetVelocity(clientID,rotate_handle,0.1,opmode)
         #wrist_handle left
        if keyboard.is_pressed ("j"):
         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,0.1,opmode)
         #wrist_handle right
        if keyboard.is_pressed ("k"):
         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,-0.1,opmode)
         #stop
        if keyboard.is_pressed ("space"):
         vrep.simxSetJointTargetVelocity(clientID,base_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,top_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,rotate_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,0,opmode)


else:
    print ('Failed connecting to remote API server')
    print ('End')
</pre>
<p></p>
<h3>0517</h3>
<p>經過修改後成功模擬</p>
<p><span>操作前必須安裝</span><a href="https://pypi.org/project/keyboard/">python keyboard</a></p>
<p>檔案下載:<a href="https://drive.google.com/file/d/1FErGMzyfP5MTvf8cLc1Ox2xHJhuDN1XH/view?usp=sharing">https://drive.google.com/file/d/1FErGMzyfP5MTvf8cLc1Ox2xHJhuDN1XH/view?usp=sharing</a></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/U4dX3f4b50s" title="YouTube video player" width="560"></iframe></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># File created by Thibaut Royer, Epitech school
# thibaut1.royer@epitech.eu
# It intends to be an example program for the "Two wheels, one arm" educative project.
 
import sim as vrep
import math
import random
import time
import keyboard
 
print ('Start')
 
# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.0.4', 19997, True, True, 5000, 5)
 
if clientID != -1:
    print ('Connected to remote API server')
     
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823218",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
 
    # Communication operating mode with the remote API : wait for its answer before continuing (blocking mode)
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiConstants.htm
    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming
 
    # Try to retrieve motors and robot handlers
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectHandle
    vrep.simxStartSimulation(clientID, opmode)
    ret,base_handle=vrep.simxGetObjectHandle(clientID,"joint1",opmode)
    ret,bottom_handle=vrep.simxGetObjectHandle(clientID,"joint2",opmode)
    ret,top_handle=vrep.simxGetObjectHandle(clientID,"joint3",opmode)
    ret,rotate_handle=vrep.simxGetObjectHandle(clientID,"joint4",opmode)
    ret,wrist_handle=vrep.simxGetObjectHandle(clientID,"joint5",opmode)
    while True:
        #Clockwise
        if keyboard.is_pressed("a"):
         vrep.simxSetJointTargetVelocity(clientID,base_handle,0.2,opmode)
        #anti-Clockwise 
        if keyboard.is_pressed("f"):
         vrep.simxSetJointTargetVelocity(clientID,base_handle,-0.2,opmode)
        #bottom_handle up
        if keyboard.is_pressed ("w"):
         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,0.2,opmode)
        #bottom_handle down
        if keyboard.is_pressed ("s"):
         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,-0.2,opmode)
         #top_handle up
        if keyboard.is_pressed ("e"):
         vrep.simxSetJointTargetVelocity(clientID,top_handle,0.2,opmode)
         #top_handle down
        if keyboard.is_pressed ("d"):
         vrep.simxSetJointTargetVelocity(clientID,top_handle,-0.2,opmode)
         #rotate
        if keyboard.is_pressed ("r"):
         vrep.simxSetJointTargetVelocity(clientID,rotate_handle,0.2,opmode)
         #wrist_handle left
        if keyboard.is_pressed ("j"):
         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,0.2,opmode)
         #wrist_handle right
        if keyboard.is_pressed ("k"):
         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,-0.2,opmode)
         #stop
        if keyboard.is_pressed ("space"):
         vrep.simxSetJointTargetVelocity(clientID,base_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,top_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,rotate_handle,0,opmode)
         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,0,opmode)
 
 
else:
    print ('Failed connecting to remote API server')
    print ('End')</pre>
<p><br/><br/></p>
<h2>remoteApi in Lua</h2>
<h3>0513</h3>
<p>..</p>
<h1>task</h1>
<p>請各組員分別將個人在 stage1 與 stage2 所完成的 coppeliasim 場景, 採 Python remote API 進行操控, 並將過程拍成影片後, 放在個人與分組網站上.</p>
<p>stage3 專案中的 CoppeliaSim 請一律使用 <a href="http://a.kmol.info:88/CoppeliaSimEdu_4.2.0.7z">4.2.0 版</a>.</p>
<p>範例: <a href="http://mde.tw/cad2020/content/CoppeliaSim.html">http://mde.tw/cad2020/content/CoppeliaSim.html</a></p>
<h4>W10 範例:</h4>
<p style="padding-left: 30px;">各班上課時所分配到的內部 IP, 192.168.192.1+組別+排序別</p>
<p style="padding-left: 30px;">意即, 第五組排序別第一即為該組組長, 其 IP 為 192.168.192.151</p>
<p style="padding-left: 30px;">以 <a href="http://mde.tw/cad2020/downloads/coppeliasim/vrep_remoteapi_ex.7z">http://mde.tw/cad2020/downloads/coppeliasim/vrep_remoteapi_ex.7z</a> 為例, 每一個 Python3 remote api 程式執行需要 <a href="https://raw.githubusercontent.com/CoppeliaRobotics/remoteApiBindings/master/python/python/sim.py">sim.py</a>, <a href="https://raw.githubusercontent.com/CoppeliaRobotics/remoteApiBindings/master/python/python/simConst.py">simConst.py</a> 與 <a href="https://github.com/CoppeliaRobotics/remoteApiBindings/tree/master/lib/lib/Windows">remoteApi.dll</a> 等三個檔案, 若針對 2w1a.ttt 場景, 以下列 Python 程式對位於 192.168.192.1 伺服器上的 CoppeliaSim 場景進行操控:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time

print ('Start')

# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.192.1', 19997, True, True, 5000, 5)

if clientID != -1:
    print ('Connected to remote API server')

    res = vrep.simxAddStatusbarMessage(
        clientID, "teacher",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
    # Communication operating mode with the remote API : wait for its answer before continuing (blocking mode)
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiConstants.htm
    opmode = vrep.simx_opmode_oneshot_wait

    # Try to retrieve motors and robot handlers
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectHandle
    ret1, wristHandle = vrep.simxGetObjectHandle(clientID, "WristMotor", opmode)
    ret2, elbowHandle = vrep.simxGetObjectHandle(clientID, "ElbowMotor", opmode)
    ret3, shoulderHandle = vrep.simxGetObjectHandle(clientID, "ShoulderMotor", opmode)
    ret4, robotHandle = vrep.simxGetObjectHandle(clientID, "2W1A", opmode)

    # If handlers are OK, execute three random simulations
    if ret1 == 0 and ret2 == 0 and ret3 == 0:
        random.seed()
        for i in range(0, 3):
            # Start the simulation
            # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxStartSimulation
            vrep.simxStartSimulation(clientID, opmode)
            print("----- Simulation started -----")

            # Start getting the robot position
            # Unlike other commands, we will use a streaming operating mode
            # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectPosition
            pret, robotPos = vrep.simxGetObjectPosition(clientID, robotHandle, -1, vrep.simx_opmode_streaming)
            print("2w1a position: (x = " + str(robotPos[0]) +\
                  ", y = " + str(robotPos[1]) + ")")

            # Start getting the robot orientation
            # Unlike other commands, we will use a streaming operating mode
            # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectOrientation
            oret, robotOrient = vrep.simxGetObjectOrientation(clientID, robotHandle, -1, vrep.simx_opmode_streaming)
            print("2w1a orientation: (x = " + str(robotOrient[0]) + \
                  ", y = " + str(robotOrient[1]) +\
                  ", z = " + str(robotOrient[2]) + ")")

            # Make the robot move randomly five times
            for j in range(0, 5):
                # Generating random positions for the motors
                awrist = random.randint(0, 300)
                aelbow = random.randint(0, 300)
                ashoulder = random.randint(0, 300)

                # The control functions use Radians to determine the target position.
                # Here, we use maths.radians to convert degrees into radians.
                # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxSetJointTargetPosition
                print("Motors target positions: " + str(ashoulder) + " " + str(aelbow) + " " + str(awrist))
                vrep.simxSetJointTargetPosition(clientID, wristHandle, math.radians(awrist), opmode)
                vrep.simxSetJointTargetPosition(clientID, elbowHandle, math.radians(aelbow), opmode)
                vrep.simxSetJointTargetPosition(clientID, shoulderHandle, math.radians(ashoulder), opmode)

                # Wait in order to let the motors finish their movements
                # Tip: there must be a more efficient way to do it...
                time.sleep(5)

                # Get the motors effective positions after the movement sequence
                # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetJointPosition
                pwrist = vrep.simxGetJointPosition(clientID, wristHandle, opmode)
                pelbow = vrep.simxGetJointPosition(clientID, elbowHandle, opmode)
                pshoulder = vrep.simxGetJointPosition(clientID, shoulderHandle, opmode)
                print("Motors reached positions: " + str(ashoulder) + " " + str(aelbow) + " " + str(awrist))

                # Get the robot position after the movement sequence
                pret, robotPos = vrep.simxGetObjectPosition(clientID, robotHandle, -1, vrep.simx_opmode_buffer)
                print("2w1a position: (x = " + str(robotPos[0]) +\
                      ", y = " + str(robotPos[1]) + ")")

                # Get the robot orientation after the movement sequence
                oret, robotOrient = vrep.simxGetObjectOrientation(clientID, robotHandle, -1, vrep.simx_opmode_buffer)
                print("2w1a orientation: (x = " + str(robotOrient[0]) +\
                      ", y = " + str(robotOrient[1]) +\
                      ", z = " + str(robotOrient[2]) + ")")

            # End the simulation, wait to be sure V-REP had the time to stop it entirely
            # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxStopSimulation
            vrep.simxStopSimulation(clientID, opmode)
            time.sleep(1)
            print("----- Simulation ended -----")

    # Close the connection to V-REP remote server
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxFinish
    vrep.simxFinish(clientID)
else:
    print ('Failed connecting to remote API server')
print ('End')
</pre>
<h4>CoppeliaSim 場景 remote API 協同監控流程:</h4>
<ol>
<li>各組員下載 <a href="https://portableapps.com/apps/music_video/obs-studio-portable">https://portableapps.com/apps/music_video/obs-studio-portable</a></li>
<li>擔任 CoppliaSim 場景直播者時, 必須以 @gm 帳號登入 Youtube 後, 啟動 Live stream 取得直播串流金鑰, 將金鑰輸入 OBS 後, 擷取電腦顯示器啟動串流, 然後利用 copy video url 取得直播網址.</li>
<li>將直播網誌公布在 <a href="https://gitter.im/mdecourse/cd2021">https://gitter.im/mdecourse/cd2021</a>, 並附上伺服器 IPv4 內部網路 IP 位址與場景開放埠號.</li>
<li>直播者同時必須在個人網站上公布 Python remote API 操控直播場景相關參變數以及監控條件.</li>
<li>待遠端各協同操控學員準備就緒後, 完成操控流程後將所錄製的影片嵌入個人與分組網站中.</li>
</ol>
<h4>直播範例錄影:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ZGIydfD0HiQ" title="YouTube video player" width="560"></iframe></p>
<h4>參考資料:</h4>
<p style="padding-left: 30px;">RoboComp is a cutting-edge open-source robotics framework providing tools to easily create, modify and manage robot software components.</p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/robocomp">https://github.com/mdecourse/robocomp</a></p>
<p style="padding-left: 60px;">Code to connect RocoComp to V-REP</p>
<p style="padding-left: 90px;"><a href="https://github.com/mdecourse/V-REP-component">https://github.com/mdecourse/V-REP-component</a></p>
<h2>task1</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def stu2b(account):
 return account
teamb = []
 
with open("stage3_2b.txt") as fh:     #讀取stage3_2b的檔案
    data = fh.readlines()
    data = [a.replace('40823231','40823231-2') for a in data]      #將40823231換成40823231-2
    data = [a.replace('407','s407') for a in data]     #將有407的學號換成s407

for i in range(len(data)):     #數據中會有\n跟\t，將\n跟\t去除
    group = data[i].rstrip("\n").split("\t")
    teamb.append(group)
     
output = ""    
seperator = "-"*10 + "&lt;/br&gt;"     #分隔號製作
 
for i in teamb[0:]:    #小組 組長 其他六個組員
    team = i[0]
    leader = stu2b(i[1])
    m1 = stu2b(i[3])
    m2 = stu2b(i[5])
    m3 = stu2b(i[7])
    m4 = stu2b(i[9])
    m5 = stu2b(i[11])
    m6 = stu2b(i[13])

         
    leaderrepo = "&lt;a href='http://github.com/" + leader + "/cd2021'&gt;" + leader + " repo&lt;/a&gt;"    #組長以及組員的倉儲和網站
    leadersite = "&lt;a href='http://" + leader + ".github.io/cd2021'&gt;" + leader +  " site&lt;/a&gt;"
    m1repo = "&lt;a href='http://github.com/" + m1 + "/cd2021'&gt;" + m1 + " repo&lt;/a&gt;"
    m1site = "&lt;a href='http://" + m1 + ".github.io/cd2021'&gt;" + m1 +  " site&lt;/a&gt;"
    m2repo = "&lt;a href='http://github.com/" + m2 + "/cd2021'&gt;" + m2 + " repo&lt;/a&gt;"
    m2site = "&lt;a href='http://" + m2 + ".github.io/cd2021'&gt;" + m2 +  " site&lt;/a&gt;"
    m3repo = "&lt;a href='http://github.com/" + m3 + "/cd2021'&gt;" + m3 + " repo&lt;/a&gt;"
    m3site = "&lt;a href='http://" + m3 + ".github.io/cd2021'&gt;" + m3 +  " site&lt;/a&gt;"
    m4repo = "&lt;a href='http://github.com/" + m4 + "/cd2021'&gt;" + m4 + " repo&lt;/a&gt;"
    m4site = "&lt;a href='http://" + m4 + ".github.io/cd2021'&gt;" + m4 +  " site&lt;/a&gt;"
    m5repo = "&lt;a href='http://github.com/" + m5 + "/cd2021'&gt;" + m5 + " repo&lt;/a&gt;"
    m5site = "&lt;a href='http://" + m5 + ".github.io/cd2021'&gt;" + m5 +  " site&lt;/a&gt;"
    m6repo = "&lt;a href='http://github.com/" + m6 + "/cd2021'&gt;" + m6 + " repo&lt;/a&gt;"
    m6site = "&lt;a href='http://" + m6 + ".github.io/cd2021'&gt;" + m6 +  " site&lt;/a&gt;"
  
 
    teamrepo = "&lt;a href='http://github.com/" + leader + "/" + team + "'&gt;" + team + " repo&lt;/a&gt;"     #小組的倉儲含網站
    teamsite =  "&lt;a href='http://" + m1 + ".github.io/" + team + "'&gt;" + team +  " site&lt;/a&gt;"
 
    output += teamrepo + " | " + teamsite + " | " +leaderrepo + " | " + leadersite + " | " +m1repo + " | " + m1site + " | " +m2repo + " | " + m2site + " | " +m3repo + " | " + m3site + " | " +m4repo + " | " + m4site + " | " +m5repo + " | " + m5site + " | " +m6repo + " | " + m6site 
     
          
    try:
        m7 = stu2b(i[15])     #第七個組員
    except:
        m7 = ""
    try:
        m8 = stu2b(i[17])     #第八個組員
    except:
        m8 = ""
        
    if m7 != "":
       m7repo = "&lt;a href='http://github.com/" + m7 + "/cd2021'&gt;" + m7 + " repo&lt;/a&gt;"     #如果有第七個組員會再加倉儲和網站沒有的話就空白
       m7site = "&lt;a href='http://" + m7 + ".github.io/cd2021'&gt;" + m7 +  " site&lt;/a&gt;"   
       output += " |  " + m7repo + "| " + m7site
    else:
        output += "" 
     
    if m8 != "":
       m8repo = "&lt;a href='http://github.com/" + m8 + "/cd2021'&gt;" + m8 + " repo&lt;/a&gt;"     #如果有第八個組員會再加倉儲和網站最後再加分隔線
       m8site = "&lt;a href='http://" + m8 + ".github.io/cd2021'&gt;" + m8 +  " site&lt;/a&gt;"   
       output += " |  " + m8repo + "| " + m8site + "&lt;br /&gt;" + seperator
    else:
        output += "&lt;br /&gt;" + seperator
 
 
print(output)     #輸出</pre>
<p><a href="http://github.com/40823245/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823251.github.io/stage3-bg1">stage3-bg1 site</a> | <a href="http://github.com/40823245/cd2021">40823245 repo</a> | <a href="http://40823245.github.io/cd2021">40823245 site</a> | <a href="http://github.com/40823251/cd2021">40823251 repo</a> | <a href="http://40823251.github.io/cd2021">40823251 site</a> | <a href="http://github.com/40823208/cd2021">40823208 repo</a> | <a href="http://40823208.github.io/cd2021">40823208 site</a> | <a href="http://github.com/40823213/cd2021">40823213 repo</a> | <a href="http://40823213.github.io/cd2021">40823213 site</a> | <a href="http://github.com/40823232/cd2021">40823232 repo</a> | <a href="http://40823232.github.io/cd2021">40823232 site</a> | <a href="http://github.com/40823234/cd2021">40823234 repo</a> | <a href="http://40823234.github.io/cd2021">40823234 site</a> | <a href="http://github.com/40823235/cd2021">40823235 repo</a> | <a href="http://40823235.github.io/cd2021">40823235 site</a> | <a href="http://github.com/40823246/cd2021">40823246 repo</a>| <a href="http://40823246.github.io/cd2021">40823246 site</a><br/>----------<a href="http://github.com/40823217/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823201.github.io/stage3-bg2">stage3-bg2 site</a> | <a href="http://github.com/40823217/cd2021">40823217 repo</a> | <a href="http://40823217.github.io/cd2021">40823217 site</a> | <a href="http://github.com/40823201/cd2021">40823201 repo</a> | <a href="http://40823201.github.io/cd2021">40823201 site</a> | <a href="http://github.com/40823209/cd2021">40823209 repo</a> | <a href="http://40823209.github.io/cd2021">40823209 site</a> | <a href="http://github.com/40823210/cd2021">40823210 repo</a> | <a href="http://40823210.github.io/cd2021">40823210 site</a> | <a href="http://github.com/40823206/cd2021">40823206 repo</a> | <a href="http://40823206.github.io/cd2021">40823206 site</a> | <a href="http://github.com/40823207/cd2021">40823207 repo</a> | <a href="http://40823207.github.io/cd2021">40823207 site</a> | <a href="http://github.com/40823223/cd2021">40823223 repo</a> | <a href="http://40823223.github.io/cd2021">40823223 site</a> | <a href="http://github.com/40823224/cd2021">40823224 repo</a>| <a href="http://40823224.github.io/cd2021">40823224 site</a><br/>----------<a href="http://github.com/40823236/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823202.github.io/stage3-bg3">stage3-bg3 site</a> | <a href="http://github.com/40823236/cd2021">40823236 repo</a> | <a href="http://40823236.github.io/cd2021">40823236 site</a> | <a href="http://github.com/40823202/cd2021">40823202 repo</a> | <a href="http://40823202.github.io/cd2021">40823202 site</a> | <a href="http://github.com/40823203/cd2021">40823203 repo</a> | <a href="http://40823203.github.io/cd2021">40823203 site</a> | <a href="http://github.com/40823212/cd2021">40823212 repo</a> | <a href="http://40823212.github.io/cd2021">40823212 site</a> | <a href="http://github.com/40823219/cd2021">40823219 repo</a> | <a href="http://40823219.github.io/cd2021">40823219 site</a> | <a href="http://github.com/40823222/cd2021">40823222 repo</a> | <a href="http://40823222.github.io/cd2021">40823222 site</a> | <a href="http://github.com/40823231-2/cd2021">40823231-2 repo</a> | <a href="http://40823231-2.github.io/cd2021">40823231-2 site</a> | <a href="http://github.com/40823244/cd2021">40823244 repo</a>| <a href="http://40823244.github.io/cd2021">40823244 site</a><br/>----------<a href="http://github.com/40823239/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723140.github.io/stage3-bg4">stage3-bg4 site</a> | <a href="http://github.com/40823239/cd2021">40823239 repo</a> | <a href="http://40823239.github.io/cd2021">40823239 site</a> | <a href="http://github.com/s40723140/cd2021">s40723140 repo</a> | <a href="http://s40723140.github.io/cd2021">s40723140 site</a> | <a href="http://github.com/s40723128/cd2021">s40723128 repo</a> | <a href="http://s40723128.github.io/cd2021">s40723128 site</a> | <a href="http://github.com/s40723139/cd2021">s40723139 repo</a> | <a href="http://s40723139.github.io/cd2021">s40723139 site</a> | <a href="http://github.com/s40723106/cd2021">s40723106 repo</a> | <a href="http://s40723106.github.io/cd2021">s40723106 site</a> | <a href="http://github.com/s40723135/cd2021">s40723135 repo</a> | <a href="http://s40723135.github.io/cd2021">s40723135 site</a> | <a href="http://github.com/s40723143/cd2021">s40723143 repo</a> | <a href="http://s40723143.github.io/cd2021">s40723143 site</a> | <a href="http://github.com/s40723215/cd2021">s40723215 repo</a>| <a href="http://s40723215.github.io/cd2021">s40723215 site</a><br/>----------<a href="http://github.com/40823221/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823204.github.io/stage3-bg5">stage3-bg5 site</a> | <a href="http://github.com/40823221/cd2021">40823221 repo</a> | <a href="http://40823221.github.io/cd2021">40823221 site</a> | <a href="http://github.com/40823204/cd2021">40823204 repo</a> | <a href="http://40823204.github.io/cd2021">40823204 site</a> | <a href="http://github.com/40823205/cd2021">40823205 repo</a> | <a href="http://40823205.github.io/cd2021">40823205 site</a> | <a href="http://github.com/40823220/cd2021">40823220 repo</a> | <a href="http://40823220.github.io/cd2021">40823220 site</a> | <a href="http://github.com/40823228/cd2021">40823228 repo</a> | <a href="http://40823228.github.io/cd2021">40823228 site</a> | <a href="http://github.com/40823237/cd2021">40823237 repo</a> | <a href="http://40823237.github.io/cd2021">40823237 site</a> | <a href="http://github.com/40823242/cd2021">40823242 repo</a> | <a href="http://40823242.github.io/cd2021">40823242 site</a> | <a href="http://github.com/40823250/cd2021">40823250 repo</a>| <a href="http://40823250.github.io/cd2021">40823250 site</a> | <a href="http://github.com/40832244/cd2021">40832244 repo</a>| <a href="http://40832244.github.io/cd2021">40832244 site</a><br/>----------<a href="http://github.com/40823225/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823214.github.io/stage3-bg6">stage3-bg6 site</a> | <a href="http://github.com/40823225/cd2021">40823225 repo</a> | <a href="http://40823225.github.io/cd2021">40823225 site</a> | <a href="http://github.com/40823214/cd2021">40823214 repo</a> | <a href="http://40823214.github.io/cd2021">40823214 site</a> | <a href="http://github.com/40823218/cd2021">40823218 repo</a> | <a href="http://40823218.github.io/cd2021">40823218 site</a> | <a href="http://github.com/40823211/cd2021">40823211 repo</a> | <a href="http://40823211.github.io/cd2021">40823211 site</a> | <a href="http://github.com/40823248/cd2021">40823248 repo</a> | <a href="http://40823248.github.io/cd2021">40823248 site</a> | <a href="http://github.com/40823247/cd2021">40823247 repo</a> | <a href="http://40823247.github.io/cd2021">40823247 site</a> | <a href="http://github.com/40823216/cd2021">40823216 repo</a> | <a href="http://40823216.github.io/cd2021">40823216 site</a> | <a href="http://github.com/40823238/cd2021">40823238 repo</a>| <a href="http://40823238.github.io/cd2021">40823238 site</a><br/>----------<a href="http://github.com/40623144/stage3-bg7">stage3-bg7 repo</a> | <a href="http://40823233.github.io/stage3-bg7">stage3-bg7 site</a> | <a href="http://github.com/40623144/cd2021">40623144 repo</a> | <a href="http://40623144.github.io/cd2021">40623144 site</a> | <a href="http://github.com/40823233/cd2021">40823233 repo</a> | <a href="http://40823233.github.io/cd2021">40823233 site</a> | <a href="http://github.com/s40723224/cd2021">s40723224 repo</a> | <a href="http://s40723224.github.io/cd2021">s40723224 site</a> | <a href="http://github.com/40823241/cd2021">40823241 repo</a> | <a href="http://40823241.github.io/cd2021">40823241 site</a> | <a href="http://github.com/40423155/cd2021">40423155 repo</a> | <a href="http://40423155.github.io/cd2021">40423155 site</a> | <a href="http://github.com/40823227/cd2021">40823227 repo</a> | <a href="http://40823227.github.io/cd2021">40823227 site</a> | <a href="http://github.com/s40723233/cd2021">s40723233 repo</a> | <a href="http://s40723233.github.io/cd2021">s40723233 site</a><br/>----------</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/jeKMJi211CU" title="YouTube video player" width="560"></iframe></p>
<h1>stage3</h1>
<h2>每周進度影片</h2>
<h3>第九周</h3>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="//www.youtube.com/embed/dgA4QAF2RTI" width="560"></iframe></p>
<h3>第十周</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/zyOrRSpavpE" width="560"></iframe></p>
<h2>討論</h2>
<p>本小組的討論時間在組員的協調下，最終定為每個禮拜一的晚上11.。</p>
<h3>discord</h3>
<h3>第一次討論</h3>
<p>4/27</p>
<p><img alt="" height="624" src="/images/第一次討論1.png" width="1000"/></p>
<p><img alt="" height="662" src="/images/第一次討論2.png" width="1000"/><img alt="" height="667" src="/images/第一次討論3.png" width="1000"/><img alt="" height="664" src="/images/第一次討論4.png" width="1000"/><img alt="" height="667" src="/images/第一次討論5.png" width="1000"/><img alt="" height="653" src="/images/第一次討論6.png" width="1000"/><img alt="" height="656" src="/images/第一次討論7.png" width="1000"/><img alt="" height="670" src="/images/第一次討論8.png" width="1000"/><img alt="" height="655" src="/images/第一次討論9.png" width="1000"/><img alt="" height="657" src="/images/第一次討論10.png" width="1000"/><img alt="" height="665" src="/images/第一次討論11.png" width="1000"/><img alt="" height="668" src="/images/第一次討論12.png" width="1000"/><img alt="" height="669" src="/images/第一次討論13.png" width="1000"/></p>
<h3>第二次討論</h3>
<p><img alt="" height="624" src="/images/第二次討論1.PNG" width="1000"/></p>
<p><img alt="" height="624" src="/images/第二次討論2.PNG" width="1000"/></p>
<p><img alt="" height="624" src="/images/第二次討論3.PNG" width="1000"/></p>
<p><img alt="" height="324" src="/images/第二次討論4.PNG" width="1000"/></p>
<h3>第三次討論</h3>
<p><img alt="" height="1028" src="/images/第三次討論1.PNG" width="1848"/></p>
<p><img alt="" height="1028" src="/images/第三次討論2.PNG" width="1848"/></p>
<p><img alt="" height="500" src="/images/第三次討論3.PNG" width="1848"/></p>
<h2>遇到的問題</h2>
<h3>更新出錯</h3>
<p><img alt="" height="252" src="/images/遇到的問題1.jpg" width="800"/></p>
<p><img alt="" height="452" src="/images/遇到的問題2.jpg" width="800"/></p>
<p>參考網站:<a href="https://blog.csdn.net/yxlshk/article/details/79944535">https://blog.csdn.net/yxlshk/article/details/79944535</a></p>
<p>說明:由於兩位組員通時進行推動的動作，所以出現了有位組員pull時檔案衝突<span>，</span>我們討論後決定將他的版本退回到上個版本，結果證實此方法可以有效解決這個問題。</p>
<p></p>